name: CI ‚Ä¢ Build ‚Ä¢ Test

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
    paths:
      - backend/**
      - frontend/**
      - .github/workflows/ci-app.yml
  push:
    branches: [ main ]
    paths:
      - backend/**
      - frontend/**
      - .github/workflows/ci-app.yml

jobs:
  backend:
    name: Backend ‚Ä¢ Maven
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven

      # Runs tests and generates JaCoCo report at backend/target/site/jacoco/jacoco.xml
      - name: Build & Test
        run: mvn -B -U clean verify

  frontend:
    name: Frontend ‚Ä¢ Node
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      # Ensure package.json contains: "test:ci": "vitest --run --coverage"
      # which must create frontend/coverage/lcov.info
      - name: Test (with coverage)
        run: npm run test:ci --if-present

      - name: Build
        run: npm run build

  sonar:
    name: SonarCloud ‚Ä¢ Single Project
    runs-on: ubuntu-latest
    needs: [ backend, frontend ]
    steps:
      - uses: actions/checkout@v4

      # Optional: verify coverage artifacts exist
      - name: Verify coverage files exist
        run: |
          ls -l backend/target/site/jacoco/jacoco.xml || true
          ls -l frontend/coverage/lcov.info || true

      # Ensure the SonarCloud project exists (safe to run repeatedly)
      - name: Ensure SonarCloud project exists
        env:
          SONAR_TOKEN: ${{ secrets.SONARTOKEN }}
        run: |
          curl -sS -u "${SONAR_TOKEN}:" \
            -f -X POST "https://sonarcloud.io/api/projects/create" \
            -d organization="anas-443005129" \
            -d name="project2Devops" \
            -d project="anas-443005129_project2Devops" || true
          # Ensure default branch is 'main' (idempotent)
          curl -sS -u "${SONAR_TOKEN}:" \
            -f -X POST "https://sonarcloud.io/api/project_branches/rename" \
            -d project="anas-443005129_project2Devops" \
            -d name="main" || true

      - name: üîç SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_HOST_URL: https://sonarcloud.io
          SONAR_TOKEN: ${{ secrets.SONARTOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }} # <-- using your secret PAT
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=anas-443005129_project2Devops
            -Dsonar.organization=anas-443005129
            -Dsonar.projectName=project2Devops
            -Dsonar.newCode.referenceBranch=main
            -Dsonar.verbose=true
            -Dsonar.sources=backend/src/main/java,frontend/src
            -Dsonar.tests=backend/src/test/java,frontend/src
            -Dsonar.java.binaries=backend/target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=backend/target/site/jacoco/jacoco.xml
            -Dsonar.javascript.lcov.reportPaths=frontend/coverage/lcov.info
            -Dsonar.typescript.tsconfigPath=frontend/tsconfig.json
            -Dsonar.test.inclusions="frontend/**/*.test.ts,frontend/**/*.test.tsx,backend/src/test/java/**/*.java"
            -Dsonar.exclusions="frontend/**/*.test.ts,frontend/**/*.test.tsx,frontend/**/test/**,frontend/**/*.config.ts,frontend/**/*.config.js"
