name: Terraform (Azure)

on:
  workflow_call:
    inputs:
      fe_image:
        type: string
        required: false
        default: anasabdullahalzahrani/three-tier-frontend:latest
      be_image:
        type: string
        required: false
        default: anasabdullahalzahrani/three-tier-backend:latest
    secrets:
      AZURE_CREDENTIALS:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      DOCKERHUB_USERNAME:
        required: false
      DOCKERHUB_TOKEN:
        required: false

env:
  TF_ROOT: infra/terraform
  TF_VERSION: "1.8.5"
  TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/.tf-plugin-cache

jobs:
  tf:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    defaults:
      run:
        working-directory: ${{ env.TF_ROOT }}
    concurrency:
      group: terraform-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    env:
      TF_VAR_fe_image: ${{ inputs.fe_image }}
      TF_VAR_be_image: ${{ inputs.be_image }}
      TF_VAR_dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
      TF_VAR_dockerhub_token:    ${{ secrets.DOCKERHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Show Azure account
        run: az account show

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Prepare plugin cache
        run: mkdir -p "$TF_PLUGIN_CACHE_DIR"

      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: tf-${{ env.TF_VERSION }}-${{ hashFiles('**/.terraform.lock.hcl') }}

      - name: Init (remote backend)
        env:
          ARM_CLIENT_ID:       ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}
          ARM_CLIENT_SECRET:   ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientSecret }}
          ARM_TENANT_ID:       ${{ fromJSON(secrets.AZURE_CREDENTIALS).tenantId }}
          ARM_SUBSCRIPTION_ID: ${{ fromJSON(secrets.AZURE_CREDENTIALS).subscriptionId }}
        run: terraform init -input=false -backend-config=backend.hcl

      - name: Terraform fmt (write)
        run: terraform fmt -recursive

      - name: Auto-commit formatted files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: terraform fmt"
          file_pattern: '**/*.tf'
          repository: .

      - name: Validate
        run: terraform validate -no-color

      - name: Plan
        env:
          ARM_CLIENT_ID:       ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}
          ARM_CLIENT_SECRET:   ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientSecret }}
          ARM_TENANT_ID:       ${{ fromJSON(secrets.AZURE_CREDENTIALS).tenantId }}
          ARM_SUBSCRIPTION_ID: ${{ fromJSON(secrets.AZURE_CREDENTIALS).subscriptionId }}
        run: |
          set -euo pipefail
          terraform plan \
            -input=false \
            -parallelism=20 \
            -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -out=tfplan.bin

      - name: Apply
        env:
          ARM_CLIENT_ID:       ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}
          ARM_CLIENT_SECRET:   ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientSecret }}
          ARM_TENANT_ID:       ${{ fromJSON(secrets.AZURE_CREDENTIALS).tenantId }}
          ARM_SUBSCRIPTION_ID: ${{ fromJSON(secrets.AZURE_CREDENTIALS).subscriptionId }}
        run: terraform apply -input=false -auto-approve tfplan.bin

      - name: Dump Terraform outputs
        run: terraform output -json | tee tf-outputs.json
