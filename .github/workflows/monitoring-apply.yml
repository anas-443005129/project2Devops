name: Terraform â€¢ Monitoring

on:
  workflow_call:
    secrets:
      AZURE_CREDENTIALS:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: false
  workflow_dispatch: {}
  push:
    branches: [ main ]
    paths:
      - infra/monitoring/**
      - .github/workflows/monitoring-apply.yml

permissions:
  id-token: write
  contents: write   

env:
  TF_ROOT: infra/monitoring
  TF_VERSION: "1.8.5"
  TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/.tf-plugin-cache

jobs:
  monitoring:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_ROOT }}

    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Show Azure account
        run: az account show

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Prepare plugin cache
        run: mkdir -p "$TF_PLUGIN_CACHE_DIR"

      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: tf-${{ env.TF_VERSION }}-${{ hashFiles('**/.terraform.lock.hcl') }}

      - name: Terraform Init (remote backend)
        run: terraform init -input=false -backend-config=backend.hcl

      - name: Terraform fmt (write)
        run: terraform fmt -recursive

      - name: Auto-commit formatted files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: terraform fmt"
          file_pattern: '**/*.tf'
          repository: .

      - name: Validate
        run: terraform validate -no-color

      - name: Plan
        run: terraform plan -input=false -out=tfplan.bin

      - name: Apply
        run: terraform apply -input=false -auto-approve tfplan.bin
